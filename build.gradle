buildscript {
    repositories {
        maven {
            url "${artifactory_contextUrl}"
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
            name = "maven-main-cache"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.0.1"
    }
}
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: "com.jfrog.artifactory"

/** Repositories */
repositories {
    jcenter()
    add buildscript.repositories.getByName("maven-main-cache")
}
dependencies {
    testCompile 'junit:junit:4.12'
}
/** for package */
version = '1.0.0-SNAPSHOT'
group = 'mypro'

/** Source sets definitions*/
sourceSets {
    main {
        java {
            srcDirs = ['src/main/com/mypro/hello']
        }
    }
    test {
        java {
            srcDirs = ['src/test/com/mypro/hello']
        }
    }
}

//configuration
artifactory {
    contextUrl = "${artifactory_contextUrl}"
    publish {
        repository {
            repoKey = 'libs-snapshot-local'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true

        }       
        defaults {
            publications ('mavenJava')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team' : 'core']
            publishPom = false // Publish generated POM files to Artifactory (true by default)
        }
    }
}

task createPom << {
    pom {
        project {
            groupId 'mypro'
            artifactId 'mypro'
            version '1.0.0-SNAPSHOT'
            inceptionYear '2019'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("$buildDir/publications/mavenJava/pom-default.xml")
}

//publish - Publishes all publications produced by this project.
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
       }
    }
}

//artifactoryPublish - Deploys artifacts + generated build-info metadata to Artifactory, using project publications.
artifactoryPublish {
    dependsOn createPom
}
